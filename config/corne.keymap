/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&sk { quick-release; };

&mt { hold-trigger-on-release; };

/ {
    combos {
        compatible = "zmk,combos";

        boot {
            bindings = <&bootloader>;
            key-positions = <24 35>;
            layers = <3>;
        };
    };

    macros {
        comma: comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(FSLH) &kp SPACE>;
            label = "COMMA";
            wait-ms = <20>;
            tap-ms = <20>;
        };

        dot: dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp SPACE &sk LSHIFT>;
            label = "DOT";
            wait-ms = <20>;
            tap-ms = <20>;
        };
    };

    behaviors {
        tap_comma: tap_comma {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_COMMA";
            bindings = <&mo>, <&comma>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };

        tap_dot: tap_dot {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_DOT";
            bindings = <&mo>, <&dot>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&gresc        &kp Q  &kp W  &kp E      &kp R           &kp T                   &kp Y               &kp U         &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp TAB       &kp A  &kp S  &kp D      &kp F           &kp G                   &kp H               &kp J         &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C      &kp V           &kp B                   &kp N               &kp M         &kp COMMA      &kp DOT  &kp FSLH  &kp LC(LEFT_SHIFT)
                            &kp LCTRL  &tap_comma 1 0  &mt LEFT_SHIFT SPACE    &mt LEFT_SHIFT RET  &tap_dot 2 0  &kp BACKSPACE
            >;

            label = "main";
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F12       &kp N1  &kp N2  &kp N3     &kp N4  &kp N5       &kp N6   &kp N7              &kp N8          &kp N9         &kp N0  &gresc
&kp F11       &kp F1  &kp F2  &kp F3     &kp F4  &kp F5       &none    &kp LC(LEFT_ARROW)  &kp UP          &kp LC(RIGHT)  &trans  &trans
&kp LEFT_ALT  &kp F6  &kp F7  &kp F8     &kp F9  &kp F10      &trans   &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &trans  &trans
                              &kp LCTRL  &none   &kp SPACE    &kp RET  &to 3               &kp BACKSPACE
            >;

            label = "lower";
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none         &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK   &kp LPAR  &kp RPAR  &gresc
&kp TAB       &trans    &trans  &trans     &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT    &kp RBKT  &kp BSLH  &kp GRAVE
&kp LEFT_ALT  &trans    &trans  &trans     &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC    &kp RBRC  &kp PIPE  &kp TILDE
                                &kp LCTRL  &to 3     &kp SPACE    &kp RET    &none      &kp DELETE
            >;

            label = "raise";
        };

        game {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E             &kp R      &kp T        &none         &none           &kp UP_ARROW    &none      &none   &to 0
&kp TAB    &kp A  &kp S  &kp D             &kp F      &kp G        &none         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none   &kp LALT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V      &kp B        &kp NUMBER_1  &kp N2          &kp N3          &kp N4     &kp N5  &kp TAB
                         &kp LEFT_CONTROL  &kp LSHFT  &kp SPACE    &kp RET       &kp LSHFT       &kp LALT
            >;

            label = "game";
        };

        extra {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;

            label = "extra";
        };
    };
};
